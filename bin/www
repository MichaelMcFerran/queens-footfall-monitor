#!/usr/bin/env node
var debug = require('debug')('server');
var app = require('../app');

app.set('port', process.env.PORT || 3000); //change from 3000 to work locally to match client

var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});

    //connection to database hosted on cleardB with heroku
    var mysql = require('mysql');

    var con = mysql.createConnection({
      host: "eu-cdbr-west-03.cleardb.net",
      user: "b357da7f3209b9",
      password: "f1318198",
      database : 'heroku_58f73cf4b46766d'
    });
    //test to check if connection works
    // con.connect(function(err) {
    //     if (err) throw err;
    //     var log = "SELECT * FROM FMusers"
    //     con.query(log, function (err, result, fields) {
    //       if (err) throw err;
    //       var resultLo = result;
    //       console.log(resultLo);
    //     });
    //   });

var io = require("socket.io").listen(server);

io.on("connection", function(socket){
  console.log("Client Connected");

//   socket.on("stateChanged", function(state){
//     console.log("State Changed: " + state);
//     io.emit("updateState", state); // submits change to pi client
//   });
  
   //this needs to be named for each room specific pi, and is modualr so can be scaled up for an amount of Pis
   socket.on("counter", function(count){
     console.log("Person Count " + count); //see count in server console for testing
     //document.getElementById("myCount").innerHTML = count; //jQuery used to get and post count
     io.emit("updatecount", count); // submits change to listening html client
     //update dB
     con.connect(function(err) {
      if (err) throw err;  
      //RoomId and buildingID values specific to each room and sensor as differentiate between each other in dB
      //var countL1CSB = count;
      //var FootfallCSBLab1 = "INSERT INTO `FMusers` ( `RoomID`, `BuildingID`, `CurrentFootfall`) VALUES (1, 1,  )" + connection.escape(count) ;
      //test to check uploads before passing param
      var FootfallCSBLab1 = "INSERT INTO `FMusers` ( `RoomID`, `BuildingID`, `CurrentFootfall`) VALUES (1, 1, 4 )"
      con.query(log, function (err, result, fields) {
        if (err) throw err;
        //test to know if it uploads
        // var resultLo = result;
        // console.log(resultLo);
        console.log("inserted footfall count to dB");
      });
    });
   });

});


        //test upload to db and update , used be inside socket.on and inside io.on
     //connection to db test
     //var mysql = require('mysql'); //fix
    //  var mysql = require('../node_modules/mysql'); //fix ?
    // var mysql = require('../mysql'); //fix ?

    //  var con = mysql.createConnection({
    //    host: "eu-cdbr-west-03.cleardb.net",
    //    user: "b357da7f3209b9",
    //    password: "f1318198",
    //    database : 'heroku_58f73cf4b46766d'
    //  });
    //  //one per room to take in data
    //  //  this for example is csb first floor lab
    //  con.connect(function(err) {
    //      if (err) throw err;
    //      console.log("connected");
    //      //insert passed footfall from sensor
    //      var counts = count;
    //      con.query("INSERT INTO `FMusers` (BuildingID, RoomID, CurrentFootfall) VALUES ('1', '1', '4');", function (err, result, fields) {
    //        if (err) throw err;
    //        var resultLo = result;
    //        console.log(resultLo);
    //      });
    //    });

